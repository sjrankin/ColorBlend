#include "ColorBlender.h"

//Ignore "typedef ignored" warnings.
#pragma warning (disable: 4091)

inline int AlphaIndex(int Index)
{
    return Index + 3;
}

inline int RedIndex(int Index)
{
    return Index + 2;
}

inline int GreenIndex(int Index)
{
    return Index + 1;
}

inline int BlueIndex(int Index)
{
    return Index + 0;
}

BYTE BitCounts[256] = 
{
    0,          //0x00000000
    1,          //0x00000001
    1,          //0x00000010
    2,          //0x00000011
    1,          //0x00000100
    2,          //0x00000101
    2,          //0x00000110
    3,          //0x00000111
    1,          //0x00001000
    2,          //0x00001001
    2,          //0x00001010
    3,          //0x00001011
    2,          //0x00001100
    3,          //0x00001101
    3,          //0x00001110
    4,          //0x00001111

    1,          //0x00010000
    2,          //0x00010001
    2,          //0x00010010
    3,          //0x00010011
    2,          //0x00010100
    3,          //0x00010101
    3,          //0x00010110
    4,          //0x00010111
    2,          //0x00011000
    3,          //0x00011001
    3,          //0x00011010
    4,          //0x00011011
    3,          //0x00011100
    4,          //0x00011101
    4,          //0x00011110
    5,          //0x00011111

    1,          //0x00100000
    2,          //0x00100001
    2,          //0x00100010
    3,          //0x00100011
    2,          //0x00100100
    3,          //0x00100101
    3,          //0x00100110
    4,          //0x00100111
    2,          //0x00101000
    3,          //0x00101001
    3,          //0x00101010
    4,          //0x00101011
    3,          //0x00101100
    4,          //0x00101101
    4,          //0x00101110
    5,          //0x00101111

    2,          //0x00110000
    3,          //0x00110001
    3,          //0x00110010
    4,          //0x00110011
    3,          //0x00110100
    4,          //0x00110101
    4,          //0x00110110
    5,          //0x00110111
    3,          //0x00111000
    4,          //0x00111001
    4,          //0x00111010
    5,          //0x00111011
    4,          //0x00111100
    5,          //0x00111101
    5,          //0x00111110
    6,          //0x00111111

    1,          //0x01000000
    2,          //0x01000001
    2,          //0x01000010
    3,          //0x01000011
    2,          //0x01000100
    3,          //0x01000101
    3,          //0x01000110
    4,          //0x01000111
    2,          //0x01001000
    3,          //0x01001001
    3,          //0x01001010
    4,          //0x01001011
    3,          //0x01001100
    4,          //0x01001101
    4,          //0x01001110
    5,          //0x01001111

    2,          //0x01010000
    3,          //0x01010001
    3,          //0x01010010
    4,          //0x01010011
    3,          //0x01010100
    4,          //0x01010101
    4,          //0x01010110
    5,          //0x01010111
    3,          //0x01011000
    4,          //0x01011001
    4,          //0x01011010
    5,          //0x01011011
    4,          //0x01011100
    5,          //0x01011101
    5,          //0x01011110
    6,          //0x01011111

    3,          //0x01110000
    4,          //0x01110001
    4,          //0x01110010
    5,          //0x01110011
    4,          //0x01110100
    5,          //0x01110101
    5,          //0x01110110
    6,          //0x01110111
    4,          //0x01111000
    5,          //0x01111001
    5,          //0x01111010
    6,          //0x01111011
    5,          //0x01111100
    6,          //0x01111101
    6,          //0x01111110
    7,          //0x01111111

    1,          //0x10000000
    2,          //0x10000001
    2,          //0x10000010
    3,          //0x10000011
    2,          //0x10000100
    3,          //0x10000101
    3,          //0x10000110
    4,          //0x10000111
    2,          //0x10001000
    3,          //0x10001001
    3,          //0x10001010
    4,          //0x10001011
    3,          //0x10001100
    4,          //0x10001101
    4,          //0x10001110
    5,          //0x10001111

    2,          //0x10010000
    3,          //0x10010001
    3,          //0x10010010
    4,          //0x10010011
    3,          //0x10010100
    4,          //0x10010101
    4,          //0x10010110
    5,          //0x10010111
    3,          //0x10011000
    4,          //0x10011001
    4,          //0x10011010
    5,          //0x10011011
    4,          //0x10011100
    5,          //0x10011101
    5,          //0x10011110
    6,          //0x10011111

    2,          //0x11000000
    3,          //0x11000001
    3,          //0x11000010
    4,          //0x11000011
    3,          //0x11000100
    4,          //0x11000101
    4,          //0x11000110
    5,          //0x11000111
    3,          //0x11001000
    4,          //0x11001001
    4,          //0x11001010
    5,          //0x11001011
    4,          //0x11001100
    5,          //0x11001101
    5,          //0x11001110
    6,          //0x11001111

    3,          //0x10110000
    4,          //0x10110001
    4,          //0x10110010
    5,          //0x10110011
    4,          //0x10110100
    5,          //0x10110101
    5,          //0x10110110
    6,          //0x10110111
    4,          //0x10111000
    5,          //0x10111001
    5,          //0x10111010
    6,          //0x10111011
    5,          //0x10111100
    6,          //0x10111101
    6,          //0x10111110
    7,          //0x10111111

    2,          //0x11000000
    3,          //0x11000001
    3,          //0x11000010
    4,          //0x11000011
    3,          //0x11000100
    4,          //0x11000101
    4,          //0x11000110
    5,          //0x11000111
    3,          //0x11001000
    4,          //0x11001001
    4,          //0x11001010
    5,          //0x11001011
    4,          //0x11001100
    5,          //0x11001101
    5,          //0x11001110
    6,          //0x11001111

    3,          //0x11010000
    4,          //0x11010001
    4,          //0x11010010
    5,          //0x11010011
    4,          //0x11010100
    5,          //0x11010101
    5,          //0x11010110
    6,          //0x11010111
    4,          //0x11011000
    5,          //0x11011001
    5,          //0x11011010
    6,          //0x11011011
    5,          //0x11011100
    6,          //0x11011101
    6,          //0x11011110
    7,          //0x11011111

    3,          //0x11100000
    4,          //0x11100001
    4,          //0x11100010
    5,          //0x11100011
    4,          //0x11100100
    5,          //0x11100101
    5,          //0x11100110
    6,          //0x11100111
    4,          //0x11101000
    5,          //0x11101001
    5,          //0x11101010
    6,          //0x11101011
    5,          //0x11101100
    6,          //0x11101101
    6,          //0x11101110
    7,          //0x11101111

    4,          //0x11110000
    5,          //0x11110001
    5,          //0x11110010
    6,          //0x11110011
    5,          //0x11110100
    6,          //0x11110101
    6,          //0x11110110
    7,          //0x11110111
    5,          //0x11111000
    6,          //0x11111001
    6,          //0x11111010
    7,          //0x11111011
    6,          //0x11111100
    7,          //0x11111101
    7,          //0x11111110
    8,          //0x11111111
};

int BitCountTable(BYTE SourceValue)
{
    return BitCounts[SourceValue];
}

int BitCountTable2(BYTE SourceValue)
{
    return BitCountTable(SourceValue);
}

int BitCount(BYTE SourceValue)
{
    int Count = 0;
    for (Count = 0; SourceValue; Count++)
    {
        SourceValue &= SourceValue - 1;
    }
    return Count;
}